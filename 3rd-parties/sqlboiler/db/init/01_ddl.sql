CREATE TABLE IF NOT EXISTS positions (
    positionId SMALLINT NOT NULL AUTO_INCREMENT,
    name VARCHAR(50),
    createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (positionId)
);

CREATE TABLE IF NOT EXISTS occupations (
    occupationId SMALLINT NOT NULL AUTO_INCREMENT,
    name VARCHAR(50),
    createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (occupationId)
);

CREATE TABLE IF NOT EXISTS users (
    userId CHAR(50) NOT NULL,
    name VARCHAR(200) CHARACTER SET utf8 NOT NULL,
    email VARCHAR(256) NOT NULL,
    nickName VARCHAR(50) CHARACTER SET utf8,
    sex CHAR(1) NOT NULL DEFAULT '0',
    birthday DATE NOT NULL,
    photoUrl TEXT CHARACTER SET utf8,
    positionId SMALLINT,
    academicBackground TEXT CHARACTER SET utf8mb4,
    company TEXT CHARACTER SET utf8mb4,
    selfIntroduction TEXT CHARACTER SET utf8mb4,
    createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (userId),
    CONSTRAINT users_ibfk_3 FOREIGN KEY(positionId) REFERENCES positions(positionId) ON DELETE RESTRICT ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS userlocations (
    userId CHAR(50) NOT NULL,
    latitude DOUBLE NOT NULL,
    longitude DOUBLE NOT NULL,
    createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (userId),
    CONSTRAINT userlocations_ibfk_1 FOREIGN KEY(userId) REFERENCES users(userId) ON DELETE CASCADE
);
